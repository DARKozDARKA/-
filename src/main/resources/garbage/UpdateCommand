package garbage;

import discord.model.GuildSettings;
import discord.tree.TreeRoot;
import discord4j.core.event.domain.interaction.ChatInputInteractionEvent;
import lombok.Getter;
import lombok.RequiredArgsConstructor;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;
import reactor.core.publisher.Mono;

import static discord.structure.CommandName.QUESTION;

@Component
@RequiredArgsConstructor
public class UpdateCommand extends SlashCommand {

    private static final Logger log = LoggerFactory.getLogger(UpdateCommand.class);
    @Getter
    private static final Command command = QUESTION;
    public final GuildSettings guildSettings;

    private final TreeRoot treeRoot;

    @Override
    public boolean filter(ChatInputInteractionEvent event) {
        return filterByCommand(event) &&
                filterByChannelId(event, guildSettings.getHelpChannelId());
    }

    @Override
    public Mono<Void> handle(ChatInputInteractionEvent event) {
        final var interactionAuthor = event.getInteraction().getMember();
        if(interactionAuthor.isEmpty()) {
            log.info("Error! interactionAuthor in ApplicationCommandInteractionEvent is empty.");
            return Mono.empty();
        }
        if(!configs.getUserWhiteList().contains(interactionAuthor.get().getId().asLong())) {
            return event.reply("You can not use this command.")
                    .withEphemeral(true);
        }
        /*var errorMessage = treeRoot.updateRoot();
        if(errorMessage == null) {
            return event.reply("Success");
        } else {
            return event.reply("```"+errorMessage+"```");
        }*/
        return null;
    }
}
